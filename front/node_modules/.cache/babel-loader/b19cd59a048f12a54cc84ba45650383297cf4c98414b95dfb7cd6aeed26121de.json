{"ast":null,"code":"var _jsxFileName = \"/Users/sanajayaswal/Downloads/syllasync/syllasync-frontend/src/components/SyllabusUploader.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SyllabusUploader = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage('Please select a file');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      console.log('Uploading file:', file.name);\n      const response = await fetch('http://localhost:5002/upload', {\n        method: 'POST',\n        body: formData,\n        headers: {}\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || `HTTP error! status: ${response.status}`);\n      }\n      setMessage(data.message || 'Success!');\n      console.log('Response:', data);\n    } catch (error) {\n      console.error('Upload error:', error);\n      setMessage(`Upload failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: e => {\n        var _e$target$files;\n        return setFile(((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) || null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Syllabus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(SyllabusUploader, \"yUNOnQxWjnYufcbQnTW1CT0xGVo=\");\n_c = SyllabusUploader;\nexport default SyllabusUploader;\nvar _c;\n$RefreshReg$(_c, \"SyllabusUploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SyllabusUploader","_s","file","setFile","message","setMessage","handleUpload","formData","FormData","append","console","log","name","response","fetch","method","body","headers","data","json","ok","Error","error","status","style","padding","children","type","accept","onChange","e","_e$target$files","target","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sanajayaswal/Downloads/syllasync/syllasync-frontend/src/components/SyllabusUploader.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SyllabusUploader: React.FC = () => {\n    const [file, setFile] = useState<File | null>(null);\n    const [message, setMessage] = useState<string>('');\n\n    const handleUpload = async () => {\n        if (!file) {\n            setMessage('Please select a file');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        try {\n            console.log('Uploading file:', file.name);\n            \n            const response = await fetch('http://localhost:5002/upload', {\n                method: 'POST',\n                body: formData,\n                headers: {}\n            });\n\n            const data = await response.json();\n            \n            if (!response.ok) {\n                throw new Error(data.error || `HTTP error! status: ${response.status}`);\n            }\n\n            setMessage(data.message || 'Success!');\n            console.log('Response:', data);\n        } catch (error) {\n            console.error('Upload error:', error);\n            setMessage(`Upload failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n        }\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <input \n                type=\"file\" \n                accept=\".pdf\"\n                onChange={(e) => setFile(e.target.files?.[0] || null)} \n            />\n            <button onClick={handleUpload}>Upload Syllabus</button>\n            {message && <p>{message}</p>}\n        </div>\n    );\n};\n\nexport default SyllabusUploader;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAElD,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACJ,IAAI,EAAE;MACPG,UAAU,CAAC,sBAAsB,CAAC;MAClC;IACJ;IAEA,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;IAE7B,IAAI;MACAQ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAET,IAAI,CAACU,IAAI,CAAC;MAEzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAET,QAAQ;QACdU,OAAO,EAAE,CAAC;MACd,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAElC,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,IAAI,uBAAuBT,QAAQ,CAACU,MAAM,EAAE,CAAC;MAC3E;MAEAlB,UAAU,CAACa,IAAI,CAACd,OAAO,IAAI,UAAU,CAAC;MACtCM,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEO,IAAI,CAAC;IAClC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZZ,OAAO,CAACY,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCjB,UAAU,CAAC,kBAAkBiB,KAAK,YAAYD,KAAK,GAAGC,KAAK,CAAClB,OAAO,GAAG,eAAe,EAAE,CAAC;IAC5F;EACJ,CAAC;EAED,oBACIL,OAAA;IAAKyB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5B3B,OAAA;MACI4B,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,MAAM;MACbC,QAAQ,EAAGC,CAAC;QAAA,IAAAC,eAAA;QAAA,OAAK5B,OAAO,CAAC,EAAA4B,eAAA,GAAAD,CAAC,CAACE,MAAM,CAACC,KAAK,cAAAF,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC,KAAI,IAAI,CAAC;MAAA;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACFtC,OAAA;MAAQuC,OAAO,EAAEhC,YAAa;MAAAoB,QAAA,EAAC;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtDjC,OAAO,iBAAIL,OAAA;MAAA2B,QAAA,EAAItB;IAAO;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAACpC,EAAA,CA/CID,gBAA0B;AAAAuC,EAAA,GAA1BvC,gBAA0B;AAiDhC,eAAeA,gBAAgB;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}